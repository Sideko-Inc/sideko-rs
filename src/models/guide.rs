/// File Generated by Sideko (sideko.dev)
#[cfg_attr(feature = "cli", derive(clap::Args))]
#[derive(serde::Serialize, serde::Deserialize, Debug, Default, Clone)]
pub struct Guide {
    #[cfg_attr(feature = "cli", arg(id = "created-at", long = "created-at"))]
    pub created_at: String,
    #[cfg_attr(
        feature = "cli",
        arg(id = "default-next-href", long = "default-next-href")
    )]
    #[cfg_attr(
        feature = "cli",
        arg(value_parser = crate::core::clap::parse_json::<crate::models::GuideHref>)
    )]
    #[serde(skip_serializing_if = "Option::is_none")]
    pub default_next_href: Option<crate::models::GuideHref>,
    #[cfg_attr(
        feature = "cli",
        arg(id = "default-prev-href", long = "default-prev-href")
    )]
    #[cfg_attr(
        feature = "cli",
        arg(value_parser = crate::core::clap::parse_json::<crate::models::GuideHref>)
    )]
    #[serde(skip_serializing_if = "Option::is_none")]
    pub default_prev_href: Option<crate::models::GuideHref>,
    #[cfg_attr(feature = "cli", arg(id = "id", long = "id"))]
    pub id: String,
    #[cfg_attr(feature = "cli", arg(id = "is-parent", long = "is-parent"))]
    pub is_parent: bool,
    #[cfg_attr(feature = "cli", arg(id = "nav-label", long = "nav-label"))]
    pub nav_label: String,
    #[cfg_attr(feature = "cli", arg(id = "next-href", long = "next-href"))]
    #[cfg_attr(
        feature = "cli",
        arg(value_parser = crate::core::clap::parse_json::<crate::models::GuideHref>)
    )]
    #[serde(skip_serializing_if = "Option::is_none")]
    pub next_href: Option<crate::models::GuideHref>,
    #[cfg_attr(feature = "cli", arg(id = "order", long = "order"))]
    pub order: i64,
    #[cfg_attr(feature = "cli", arg(id = "parent-id", long = "parent-id"))]
    #[serde(skip_serializing_if = "Option::is_none")]
    pub parent_id: Option<String>,
    #[cfg_attr(feature = "cli", arg(id = "prev-href", long = "prev-href"))]
    #[cfg_attr(
        feature = "cli",
        arg(value_parser = crate::core::clap::parse_json::<crate::models::GuideHref>)
    )]
    #[serde(skip_serializing_if = "Option::is_none")]
    pub prev_href: Option<crate::models::GuideHref>,
    #[cfg_attr(feature = "cli", arg(id = "slug", long = "slug"))]
    pub slug: String,
}
